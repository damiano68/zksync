pragma solidity ^0.8.0;

contract YourContract {
    constructor() {
    }
    
    event Deposit(
        address indexed destinationReceiver,
        uint256 amount,
        uint256 indexed destinationChainId
    );
    
    event Donation(
        address sender,
        uint256 amount
    );
    
    event GrantSender(
        address sender
    );
    
    event OwnershipTransferred(
        address indexed previousOwner,
        address indexed newOwner
    );
    
    event Paused(
        address account
    );
    
    event RevokeSender(
        address sender
    );
    
    event Send(
        address receiver,
        uint256 amount,
        bytes32 srcChainTxHash
    );
    
    event Unpaused(
        address account
    );
    
    event Withdrawal(
        address indexed receiver,
        uint256 amount
    );
    
    struct ChainData {
        uint256 chainId;
        bool isEnabled;
    }
    
    function addRoutes(struct ChainData[] memory _routes) public {
    }
    
    function batchSendNativeToken(
        address payable[] memory receivers,
        uint256[] memory amounts,
        bytes32[] memory srcChainTxHashes,
        uint256 perUserGasAmount,
        uint256 maxLimit
    ) public {
    }
    
    function chainConfig(uint256) public view returns (uint256 chainId, bool isEnabled) {
    }
    
    function depositNativeToken(uint256 destinationChainId, address _to) public payable {
    }
    
    function getChainData(uint256 chainId) public view returns (ChainData memory) {
    }
    
    function grantSenderRole(address sender) public {
    }
    
    function owner() public view returns (address) {
    }
    
    function paused() public view returns (bool) {
    }
    
    function renounceOwnership() public {
    }
    
    function revokeSenderRole(address sender) public {
    }
    
    function sendNativeToken(
        address payable receiver,
        uint256 amount,
        bytes32 srcChainTxHash,
        uint256 perUserGasAmount,
        uint256 maxLimit
    ) public {
    }
    
    function senders(address) public view returns (bool) {
    }
    
    function setIsEnabled(uint256 chainId, bool _isEnabled) public returns (bool) {
    }
    
    function setPause() public returns (bool) {
    }
    
    function setUnPause() public returns (bool) {
    }
    
    function transferOwnership(address newOwner) public {
    }
    
    function withdrawBalance(address _to, uint256 _amount) public {
    }
    
    function withdrawFullBalance(address _to) public {
    }
    
    receive() external payable {
    }
}
